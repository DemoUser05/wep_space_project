import { defineStore } from 'pinia';

export const useMissionsStore = defineStore('missions', {
  state: () => ({
    missions: [
      { 
        id: 1, 
        name: "–ú–∞—Ä—Å—ñ–∞–Ω—Å—å–∫—ñ –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è", 
        destination: "–ú–∞—Ä—Å", 
        duration: 30, 
        started: false, 
        completed: false, 
        progress: 0,
        type: "–¥–æ—Å–ª—ñ–¥–Ω–∏—Ü—å–∫—ñ", 
        difficulty: "–ª–µ–≥–∫–∞" 
      },
      { 
        id: 2, 
        name: "–†—è—Ç—É–≤–∞–ª—å–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è '–û—Ä–±—ñ—Ç–∞'", 
        destination: "–û—Ä–±—ñ—Ç–∞ –ó–µ–º–ª—ñ", 
        duration: 10, 
        started: false, 
        completed: false, 
        progress: 0,
        type: "—Ä—è—Ç—É–≤–∞–ª—å–Ω—ñ", 
        difficulty: "—Å–µ—Ä–µ–¥–Ω—è" 
      },
      { 
        id: 3, 
        name: "–ö–æ–ª–æ–Ω—ñ–∑–∞—Ü—ñ—è –¢–∏—Ç–∞–Ω–∞", 
        destination: "–¢–∏—Ç–∞–Ω", 
        duration: 60, 
        started: false, 
        completed: false, 
        progress: 0,
        type: "–∫–æ–ª–æ–Ω—ñ–∑–∞—Ü—ñ—è", 
        difficulty: "—Å–∫–ª–∞–¥–Ω–∞" 
      },
      { 
        id: 4, 
        name: "–î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –∞—Å—Ç–µ—Ä–æ—ó–¥—ñ–≤", 
        destination: "–ü–æ—è—Å –∞—Å—Ç–µ—Ä–æ—ó–¥—ñ–≤", 
        duration: 15, 
        started: false, 
        completed: false, 
        progress: 0,
        type: "–¥–æ—Å–ª—ñ–¥–Ω–∏—Ü—å–∫—ñ", 
        difficulty: "—Å–µ—Ä–µ–¥–Ω—è" 
      },
      { 
        id: 5, 
        name: "–ï–≤–∞–∫—É–∞—Ü—ñ—è –º—ñ—Å—è—Ü—è –ì–∞–Ω—ñ–º–µ–¥", 
        destination: "–ì–∞–Ω—ñ–º–µ–¥", 
        duration: 25, 
        started: false, 
        completed: false, 
        progress: 0,
        type: "—Ä—è—Ç—É–≤–∞–ª—å–Ω—ñ", 
        difficulty: "—Å–∫–ª–∞–¥–Ω–∞" 
      },
      { 
        id: 6, 
        name: "–ö—ñ–ª—å—Ü–µ —Å–∞—Ç—É—Ä–Ω–∞", 
        destination: "–°–∞—Ç—É—Ä–Ω", 
        duration: 45, 
        started: false, 
        completed: false, 
        progress: 0,
        type: "–¥–æ—Å–ª—ñ–¥–Ω–∏—Ü—å–∫—ñ", 
        difficulty: "—Å–∫–ª–∞–¥–Ω–∞" 
      },
    ],    
    markers: [
      { id: 1, top: "15%", left: "36%", tooltip: "–ú—ñ—Å—ñ—è 1: –ú–∞—Ä—Å" },
      { id: 2, top: "37%", left: "76%", tooltip: "–ú—ñ—Å—ñ—è 2: –û—Ä–±—ñ—Ç–∞ –ó–µ–º–ª—ñ" },
      { id: 3, top: "63%", left: "38%", tooltip: "–ú—ñ—Å—ñ—è 3: –¢–∏—Ç–∞–Ω" },
      { id: 4, top: "31%", left: "22%", tooltip: "–ú—ñ—Å—ñ—è 4: –ü–æ—è—Å –∞—Å—Ç–µ—Ä–æ—ó–¥—ñ–≤" },
      { id: 5, top: "45%", left: "81%", tooltip: "–ú—ñ—Å—ñ—è 5: –ì–∞–Ω—ñ–º–µ–¥" },
      { id: 6, top: "4%", left: "66%", tooltip: "–ú—ñ—Å—ñ—è 6: –°–∞—Ç—É—Ä–Ω" },
    ],
    shipPosition: { x: 50, y: 50 },
    timerDisplay: "‚è≥ –ß–∞—Å –¥–æ –ø—Ä–∏–±—É—Ç—Ç—è:",
    journeyDetails: "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –º–∞—Ä–∫–µ—Ä, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¥–µ—Ç–∞–ª—ñ.",
    shipStatus: {
      fuel: 50,
      energy: 70,
      crew: 65,
    },
  }),
  actions: {
    // –ó–∞–ø—É—Å–∫ –º—ñ—Å—ñ—ó
    startMission(missionId) {
      const mission = this.missions.find(m => m.id === missionId);
      if (mission) {
        mission.started = true;
        this.updateMissionProgress(missionId, 0);
        this.journeyDetails = `üöÄ ${mission.name} —Ä–æ–∑–ø–æ—á–∞—Ç–∞! –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: ${mission.destination}`;

        let timeLeft = mission.duration;
        let elapsedTime = 0;

        const interval = setInterval(() => {
          elapsedTime++;
          timeLeft--;

          this.updateTimerDisplay(timeLeft);
          const progress = Math.floor((elapsedTime / mission.duration) * 100);
          this.updateMissionProgress(missionId, progress);

          // –í–∏–ø–∞–¥–∫–æ–≤—ñ –ø–æ–¥—ñ—ó –∑ —à–∞–Ω—Å–æ–º 10%
          if (Math.random() < 0.1) {
            this.triggerRandomEvent();
          }

          // –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –º—ñ—Å—ñ—ó
          if (timeLeft <= 0) {
            clearInterval(interval);
            mission.started = false;
            mission.completed = true;
            this.updateMissionProgress(missionId, 100);
            this.journeyDetails += `<p>üõ¨ ${mission.name} –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—ñ—Ç–∞—î–º–æ –µ–∫—ñ–ø–∞–∂!</p>`;
          }
        }, 1000);

        // –†—É—Ö –∫–æ—Ä–∞–±–ª—è
        const marker = this.markers.find(m => m.id === missionId);
        this.moveShipTo(marker.left.replace('%', ''), marker.top.replace('%', ''), mission.duration);
      }
    },
    // –í–∏–ø–∞–¥–∫–æ–≤—ñ –ø–æ–¥—ñ—ó
    triggerRandomEvent() {
      const events = [
        { message: "üåå –í—ñ–¥–∫—Ä–∏—Ç–æ –Ω–µ–≤—ñ–¥–æ–º—É –∑–æ—Ä—è–Ω—É —Å–∏—Å—Ç–µ–º—É! –û—Ç—Ä–∏–º–∞–Ω–æ +5 –µ–Ω–µ—Ä–≥—ñ—ó.", fuel: 0, energy: 5, crew: 0 },
        { message: "üõ∏ –í–∏—è–≤–ª–µ–Ω–æ –ø—Ä–∏–±—É–ª—å—Ü—ñ–≤! –í–æ–Ω–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ –≤–∞–º 10 –æ–¥–∏–Ω–∏—Ü—å –ø–∞–ª—å–Ω–æ–≥–æ.", fuel: 10, energy: 0, crew: 0 },
        { message: "üö® –ê–≤–∞—Ä—ñ—è –Ω–∞ –∫–æ—Ä–∞–±–ª—ñ! –í–∏—Ç—Ä–∞—á–µ–Ω–æ 10 –µ–Ω–µ—Ä–≥—ñ—ó.", fuel: 0, energy: -10, crew: 0 },
        { message: "‚òÑÔ∏è –£–¥–∞—Ä –∞—Å—Ç–µ—Ä–æ—ó–¥–∞! –í—Ç—Ä–∞—Ç–∞ 5% –µ–∫—ñ–ø–∞–∂—É.", fuel: 0, energy: 0, crew: -5 },
      ];

      const randomEvent = events[Math.floor(Math.random() * events.length)];
      this.journeyDetails += `<p>${randomEvent.message}</p>`;
      this.updateShipStatus(randomEvent.fuel, randomEvent.energy, randomEvent.crew);
    },
    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–æ—Ä–∞–±–ª—è
    updateShipStatus(fuelChange, energyChange, crewChange) {
      this.shipStatus.fuel = Math.max(0, Math.min(100, this.shipStatus.fuel + fuelChange));
      this.shipStatus.energy = Math.max(0, Math.min(100, this.shipStatus.energy + energyChange));
      this.shipStatus.crew = Math.max(0, Math.min(100, this.shipStatus.crew + crewChange));
    },
    // –†—É—Ö –∫–æ—Ä–∞–±–ª—è –¥–æ –º–∞—Ä–∫–µ—Ä–∞
    moveShipTo(targetX, targetY, duration) {
      const totalSteps = duration;
      let step = 0;

      const interval = setInterval(() => {
        step++;
        this.shipPosition.x += (targetX - this.shipPosition.x) / (totalSteps - step + 1);
        this.shipPosition.y += (targetY - this.shipPosition.y) / (totalSteps - step + 1);

        if (step >= totalSteps) clearInterval(interval);
      }, 1000);
    },
    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–π–º–µ—Ä–∞
    updateTimerDisplay(time) {
      this.timerDisplay = `‚è≥ –ß–∞—Å –¥–æ –ø—Ä–∏–±—É—Ç—Ç—è: ${time} –¥–Ω—ñ–≤`;
    },
    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É –º—ñ—Å—ñ—ó
    updateMissionProgress(missionId, progress) {
      const mission = this.missions.find(m => m.id === missionId);
      if (mission) {
        mission.progress = progress;
    
        if (progress === 0) {
          mission.started = false;
          mission.completed = false;
        } else if (progress > 0 && progress < 100) {
          mission.started = true;
          mission.completed = false;
        } else if (progress >= 100) {
          mission.started = false;
          mission.completed = true;
        }
      }
    },    
  },
});
